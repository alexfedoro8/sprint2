"""Initial migration

Revision ID: 9fb5ac7cbc81
Revises: 
Create Date: 2024-09-14 20:05:33.888025

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9fb5ac7cbc81'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('category_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('category_name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('category_id')
    )
    op.create_table('shops',
    sa.Column('shop_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('shop_name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('shop_id')
    )
    op.create_table('status_users',
    sa.Column('status_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('status_name', sa.String(), nullable=True),
    sa.Column('discount', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('status_id')
    )
    op.create_table('products',
    sa.Column('product_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('product_name', sa.String(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['categories.category_id'], ),
    sa.PrimaryKeyConstraint('product_id')
    )
    op.create_table('users',
    sa.Column('user_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_name', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('telephone', sa.String(), nullable=False),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('favorit_product', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['status'], ['status_users.status_id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('orders',
    sa.Column('order_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('buyer', sa.Integer(), nullable=True),
    sa.Column('shop', sa.Integer(), nullable=True),
    sa.Column('product', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('price', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['buyer'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['product'], ['products.product_id'], ),
    sa.ForeignKeyConstraint(['shop'], ['shops.shop_id'], ),
    sa.PrimaryKeyConstraint('order_id')
    )
    op.create_table('quantity_products',
    sa.Column('storage_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('storage_shop', sa.Integer(), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.product_id'], ),
    sa.ForeignKeyConstraint(['storage_shop'], ['shops.shop_id'], ),
    sa.PrimaryKeyConstraint('storage_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('quantity_products')
    op.drop_table('orders')
    op.drop_table('users')
    op.drop_table('products')
    op.drop_table('status_users')
    op.drop_table('shops')
    op.drop_table('categories')
    # ### end Alembic commands ###
